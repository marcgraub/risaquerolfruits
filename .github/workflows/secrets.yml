name: create-secrets

on:
  workflow_dispatch:

jobs:
  create-secrets:
    name: create-secrets
    runs-on: ubuntu-latest
    steps:
      - name: install ssh keys
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H "${{ secrets.SSH_HOST }}" >> ~/.ssh/known_hosts
      - name: connect and pull
        run: ssh ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} "cd ${{ secrets.WORK_DIR }} && docker swarm init && echo '${{ secrets.POSTGRES_DB }}' | docker secret create postgres_db - && echo '${{ secrets.POSTGRES_USER }}' | docker secret create postgres_user - && echo '${{ secrets.POSTGRES_PASSWORD }}' | docker secret create postgres_password - && echo '${{ secrets.POSTGRES_ERP_DB_NAME }}' | docker secret create postgres_erp_db_name - && echo '${{ secrets.POSTGRES_ERP_DB_USER }}' | docker secret create postgres_erp_db_user - && echo '${{ secrets.POSTGRES_ERP_DB_PASSWORD }}' | docker secret create postgres_erp_db_password - && echo '${{ secrets.ADMINER_AUTH_USER }}' | docker secret create adminer_auth_user - && echo '${{ secrets.ADMINER_AUTH_PASSWORD_HASH }}' | docker secret create adminer_auth_password_hash - && echo '${{ secrets.CADDY_CLOUDFLARE_API_TOKEN }}' | docker secret create caddy_cloudflare_api_token - && exit"